{\rtf1\ansi\ansicpg1252\cocoartf1504
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;}
\margl1440\margr1440\vieww19300\viewh13840\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs32 \cf0 // Clone a repo from github\
git clone git@github.com:rails/rails.git\
\
// Switch branches. Branches are used for different code. Ultimately all branches merge into master\
// But if you and I are working on 2 different things then you might be working on branch `adminUI` and I might be \
// working on `backendDB`\
\
// Shows all the local branches\
git branch\
\
// Checks out a branch whether local or remote (rubocop is a branch on the remote server)\
git checkout rubocop\
\
// now add a file, and file. To see what is changed do:\

\b git status
\b0 \
\
// now add that file. To add all files you need `git add .`\

\b git add
\b0  whatever.txt\
\
// Now give it a commit message\

\b git commit -m
\b0  "Some message"\
\
// Now see the log and see your commit in there.\

\b git log
\b0 \
\
// Now check out the master branch again.\

\b git checkout master
\b0 \
\
// Do a lot and see your commit isn't there because different branches have different code.\
git log\
\
// Checkout your branch again.\
git checkout rubocop\
\
// Do a log\
git log\
\
// You see your commit there. Now push it to the remote server.\

\b git push origin master
\b0 .\
\
// Opps that failed because you don't have permissions to the Rails repo on Github.\
// Well You have done what can do for now.\
\
// Each commit has a shah key like this:\
// commit aef2bd0613f62ba1ad954cdd161d2a1c2a19048d\
// So if you go to `git log` and scroll down (keys j/k scroll down and up. :q exits)\
// and you copy and older git hash like so you can check out the code from the past. Like a time machine\
git checkout 34530f5bd566be360be4030a38b898cba97bee85\
\
// You are now in a "Detached head" state. Meaning, you aren't on any branch. You are just on a floating point\
// out in history. You can't commit code at this point. You can however run things and see that it all works.\
// You can open the code in you editor and all the code will be from that point in time. That is cool but\
// what if we need a branch in that state? We simply create one like so:\
\
git branch old_code\
git status // just for sanity\
\
// Now we need to check it out so we can go there.\
git checkout old_code\
git status\
\
// Now we are on that old level and we can push up our branch.\
// Notice how it's not master anymore? Because we aren't pushing up master we are pushing up the old_code branch.\
\
git push origin old_code \
\
// Now we are done and want to go back to the master branch so:\
git checkout master\
\
//And we are done!}